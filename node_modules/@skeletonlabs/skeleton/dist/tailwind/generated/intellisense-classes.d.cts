declare const _exports: {
    ".hide-scrollbar::-webkit-scrollbar": {
        display: string;
    };
    ".hide-scrollbar": {
        msOverflowStyle: string;
        scrollbarWidth: string;
    };
    ".h2": {
        fontSize: string;
        lineHeight: string;
        fontFamily: string;
        "@media (min-width: 768px)": {
            fontSize: string;
            lineHeight: string;
        }[];
    };
    ".h3": {
        fontSize: string;
        lineHeight: string;
        fontFamily: string;
        "@media (min-width: 768px)": {
            fontSize: string;
            lineHeight: string;
        }[];
    };
    ".anchor": {
        "--tw-text-opacity": string;
        color: string;
        textDecorationLine: string;
    };
    ".anchor:hover": {
        "--tw-brightness": string;
        filter: string;
    };
    ".time": {
        fontSize: string;
        lineHeight: string;
        "--tw-text-opacity": string;
        color: string;
    };
    ".pre": {
        overflowX: string;
        whiteSpace: string;
        backgroundColor: string;
        padding: string;
        fontFamily: string;
        fontSize: string;
        lineHeight: string;
        "--tw-text-opacity": string;
        color: string;
        borderRadius: string;
    };
    ".code": {
        whiteSpace: string;
        fontFamily: string;
        fontSize: string;
        lineHeight: string;
        "--tw-text-opacity": string;
        color: string;
        backgroundColor: string;
        borderRadius: string;
        paddingTop: string;
        paddingBottom: string;
        paddingLeft: string;
        paddingRight: string;
    };
    ".\\!legend": {
        fontSize: string;
        lineHeight: string;
        fontFamily: string;
        "@media (min-width: 768px)": {
            fontSize: string;
            lineHeight: string;
        }[];
    };
    ".legend": {
        fontSize: string;
        lineHeight: string;
        fontFamily: string;
        "@media (min-width: 768px)": {
            fontSize: string;
            lineHeight: string;
        }[];
    };
    ".label > :not([hidden]) ~ :not([hidden])": {
        "--tw-space-y-reverse": string;
        marginTop: string;
        marginBottom: string;
    };
    ".\\!input": {
        width: string;
        transitionProperty: string;
        transitionTimingFunction: string;
        transitionDuration: string;
        backgroundColor: string;
        "--tw-ring-offset-shadow": string;
        "--tw-ring-shadow": string;
        boxShadow: string;
        borderWidth: string;
        borderColor: string;
        borderRadius: string;
    };
    ".input,\n\t.textarea,\n\t.select,\n\t.input-group": {
        width: string;
        transitionProperty: string;
        transitionTimingFunction: string;
        transitionDuration: string;
        backgroundColor: string;
        "--tw-ring-offset-shadow": string;
        "--tw-ring-shadow": string;
        boxShadow: string;
        borderWidth: string;
        borderColor: string;
    };
    ".dark .\\!input": {
        backgroundColor: string;
        borderColor: string;
    };
    ".\\!input:hover": {
        "--tw-brightness": string;
        filter: string;
    };
    ".\\!input:focus": {
        "--tw-brightness": string;
        filter: string;
    };
    ".dark .input,.dark \n\t.textarea,.dark \n\t.select,.dark \n\t.input-group": {
        backgroundColor: string;
        borderColor: string;
    };
    ".input:hover,\n\t.textarea:hover,\n\t.select:hover,\n\t.input-group:hover": {
        "--tw-brightness": string;
        filter: string;
    };
    ".input:focus,\n\t.textarea:focus,\n\t.select:focus,\n\t.input-group:focus": {
        "--tw-brightness": string;
        filter: string;
    };
    ".\\!input:focus-within": {
        "--tw-border-opacity": string;
        borderColor: string;
    };
    ".input:focus-within,\n\t.textarea:focus-within,\n\t.select:focus-within,\n\t.input-group:focus-within": {
        "--tw-border-opacity": string;
        borderColor: string;
    };
    ".input,\n\t.input-group": {
        borderRadius: string;
    };
    ".textarea,\n\t.select": {
        borderRadius: string;
    };
    ".select > :not([hidden]) ~ :not([hidden])": {
        "--tw-space-y-reverse": string;
        marginTop: string;
        marginBottom: string;
    };
    ".select": {
        padding: string;
        paddingRight: string;
    };
    ".select[size]": {
        backgroundImage: string;
    };
    ".select optgroup > :not([hidden]) ~ :not([hidden])": {
        "--tw-space-y-reverse": string;
        marginTop: string;
        marginBottom: string;
    };
    ".select optgroup": {
        fontWeight: number;
    };
    ".select optgroup option": {
        marginLeft: string;
        paddingLeft: string;
    };
    ".select optgroup option:first-of-type": {
        marginTop: string;
    };
    ".select optgroup option:last-child": {
        marginBottom: string;
    };
    ".select option": {
        cursor: string;
        paddingLeft: string;
        paddingRight: string;
        paddingTop: string;
        paddingBottom: string;
        backgroundColor: string;
        borderRadius: string;
    };
    ".dark .select option": {
        backgroundColor: string;
    };
    ".select option:checked": {
        background: string;
        color: string;
    };
    ".checkbox,\n\t.radio": {
        height: string;
        width: string;
        cursor: string;
        borderRadius: string;
        "--tw-ring-offset-shadow": string;
        "--tw-ring-shadow": string;
        boxShadow: string;
        backgroundColor: string;
        borderWidth: string;
        borderColor: string;
    };
    ".dark .checkbox,.dark \n\t.radio": {
        backgroundColor: string;
        borderColor: string;
    };
    ".checkbox:hover,\n\t.radio:hover": {
        "--tw-brightness": string;
        filter: string;
    };
    ".checkbox:focus,\n\t.radio:focus": {
        "--tw-brightness": string;
        filter: string;
        "--tw-border-opacity": string;
        borderColor: string;
    };
    ".checkbox:checked,\n\t.radio:checked": {
        "--tw-bg-opacity": string;
        backgroundColor: string;
    };
    ".checkbox:checked:hover,\n\t.radio:checked:hover": {
        "--tw-bg-opacity": string;
        backgroundColor: string;
    };
    ".checkbox:checked:focus,\n\t.radio:checked:focus": {
        "--tw-bg-opacity": string;
        backgroundColor: string;
        "--tw-ring-offset-shadow": string;
        "--tw-ring-shadow": string;
        boxShadow: string;
    };
    ".radio": {
        borderRadius: string;
    };
    ".\\!input[type='file']": {
        padding: string;
    };
    ".input[type='file']": {
        padding: string;
    };
    ".\\!input[type='color']": {
        height: string;
        width: string;
        cursor: string;
        overflow: string;
        borderStyle: string;
        borderRadius: string;
        WebkitAppearance: string;
    };
    ".input[type='color']": {
        height: string;
        width: string;
        cursor: string;
        overflow: string;
        borderStyle: string;
        borderRadius: string;
        WebkitAppearance: string;
    };
    ".\\!input[type='color']::-webkit-color-swatch-wrapper": {
        padding: string;
    };
    ".input[type='color']::-webkit-color-swatch-wrapper": {
        padding: string;
    };
    ".\\!input[type='color']::-webkit-color-swatch": {
        borderStyle: string;
    };
    ".\\!input[type='color']:hover::-webkit-color-swatch": {
        "--tw-brightness": string;
        filter: string;
    };
    ".input[type='color']::-webkit-color-swatch": {
        borderStyle: string;
    };
    ".input[type='color']:hover::-webkit-color-swatch": {
        "--tw-brightness": string;
        filter: string;
    };
    ".\\!input[type='color']::-moz-color-swatch": {
        borderStyle: string;
    };
    ".input[type='color']::-moz-color-swatch": {
        borderStyle: string;
    };
    ".\\!input:disabled": {
        cursor: string;
        opacity: string;
    };
    ".\\!input:disabled:hover": {
        "--tw-brightness": string;
        filter: string;
    };
    ".input:disabled,\n\t.textarea:disabled,\n\t.select:disabled": {
        cursor: string;
        opacity: string;
    };
    ".input:disabled:hover,\n\t.textarea:disabled:hover,\n\t.select:disabled:hover": {
        "--tw-brightness": string;
        filter: string;
    };
    ".\\!input[readonly]": {
        cursor: string;
        borderWidth: string;
    };
    ".\\!input[readonly]:hover": {
        "--tw-brightness": string;
        filter: string;
    };
    ".input[readonly],\n\t.textarea[readonly],\n\t.select[readonly]": {
        cursor: string;
        borderWidth: string;
    };
    ".input[readonly]:hover,\n\t.textarea[readonly]:hover,\n\t.select[readonly]:hover": {
        "--tw-brightness": string;
        filter: string;
    };
    ".input-error": {
        "--tw-border-opacity": string;
        borderColor: string;
        "--tw-bg-opacity": string;
        backgroundColor: string;
        "--tw-text-opacity": string;
        color: string;
    };
    ".input-error::-moz-placeholder": {
        "--tw-text-opacity": string;
        color: string;
    };
    ".input-error:-ms-input-placeholder": {
        "--tw-text-opacity": string;
        color: string;
    };
    ".input-error::placeholder": {
        "--tw-text-opacity": string;
        color: string;
    };
    ".alert": {
        display: string;
        flexDirection: string;
        alignItems: string;
        padding: string;
        color: string;
        borderRadius: string;
        "@media (min-width: 1024px)": {
            flexDirection: string;
            alignItems: string;
        }[];
    };
    ".alert > :not([hidden]) ~ :not([hidden])": {
        "--tw-space-y-reverse": string;
        marginTop: string;
        marginBottom: string;
        "@media (min-width: 1024px)": {
            "--tw-space-y-reverse": string;
            marginTop: string;
            marginBottom: string;
            "--tw-space-x-reverse": string;
            marginRight: string;
            marginLeft: string;
        }[];
    };
    ".dark .alert": {
        color: string;
    };
    ".badge": {
        display: string;
        alignItems: string;
        justifyContent: string;
        whiteSpace: string;
        fontSize: string;
        lineHeight: string;
        fontWeight: number;
        paddingLeft: string;
        paddingRight: string;
        paddingTop: string;
        paddingBottom: string;
        borderRadius: string;
    };
    ".badge > :not([hidden]) ~ :not([hidden])": {
        "--tw-space-x-reverse": string;
        marginRight: string;
        marginLeft: string;
    };
    ".btn": {
        fontSize: string;
        lineHeight: string;
        paddingLeft: string;
        paddingRight: string;
        paddingTop: string;
        paddingBottom: string;
        whiteSpace: string;
        textAlign: string;
        display: string;
        alignItems: string;
        justifyContent: string;
        transitionProperty: string;
        transitionTimingFunction: string;
        transitionDuration: string;
        borderRadius: string;
    };
    ".btn > :not([hidden]) ~ :not([hidden])": {
        "--tw-space-x-reverse": string;
        marginRight: string;
        marginLeft: string;
    };
    ".btn:hover": {
        "--tw-brightness": string;
        filter: string;
    };
    ".btn:active": {
        "--tw-scale-x": string;
        "--tw-scale-y": string;
        transform: string;
        "--tw-brightness": string;
        filter: string;
    };
    ".btn-sm": {
        paddingLeft: string;
        paddingRight: string;
        paddingTop: string;
        paddingBottom: string;
        fontSize: string;
        lineHeight: string;
    };
    ".btn-icon": {
        fontSize: string;
        lineHeight: string;
        paddingLeft: string;
        paddingRight: string;
        paddingTop: string;
        paddingBottom: string;
        whiteSpace: string;
        textAlign: string;
        display: string;
        alignItems: string;
        justifyContent: string;
        transitionProperty: string;
        transitionTimingFunction: string;
        transitionDuration: string;
        padding: string;
        aspectRatio: string;
        width: string;
        borderRadius: string;
    };
    ".btn-icon > :not([hidden]) ~ :not([hidden])": {
        "--tw-space-x-reverse": string;
        marginRight: string;
        marginLeft: string;
    };
    ".btn-icon:hover": {
        "--tw-brightness": string;
        filter: string;
    };
    ".btn-icon:active": {
        "--tw-scale-x": string;
        "--tw-scale-y": string;
        transform: string;
        "--tw-brightness": string;
        filter: string;
    };
    ".btn-icon-sm": {
        aspectRatio: string;
        width: string;
        fontSize: string;
        lineHeight: string;
    };
    ".btn-group": {
        display: string;
        flexDirection: string;
        overflow: string;
        borderRadius: string;
        isolation: string;
    };
    ".btn-group > :not([hidden]) ~ :not([hidden])": {
        "--tw-space-x-reverse": string;
        marginRight: string;
        marginLeft: string;
    };
    ".btn-group button,\n\t.btn-group a,\n\t.btn-group-vertical button,\n\t.btn-group-vertical a": {
        fontSize: string;
        lineHeight: string;
        paddingLeft: string;
        paddingRight: string;
        paddingTop: string;
        paddingBottom: string;
        whiteSpace: string;
        textAlign: string;
        display: string;
        alignItems: string;
        justifyContent: string;
        transitionProperty: string;
        transitionTimingFunction: string;
        transitionDuration: string;
        color: string;
        textDecorationLine: string;
    };
    ".btn-group button > :not([hidden]) ~ :not([hidden]),\n\t.btn-group a > :not([hidden]) ~ :not([hidden]),\n\t.btn-group-vertical button > :not([hidden]) ~ :not([hidden]),\n\t.btn-group-vertical a > :not([hidden]) ~ :not([hidden])": {
        "--tw-space-x-reverse": string;
        marginRight: string;
        marginLeft: string;
    };
    ".btn-group button:hover,\n\t.btn-group a:hover,\n\t.btn-group-vertical button:hover,\n\t.btn-group-vertical a:hover": {
        "--tw-brightness": string;
        filter: string;
        backgroundColor: string;
    };
    ".btn-group button:active,\n\t.btn-group a:active,\n\t.btn-group-vertical button:active,\n\t.btn-group-vertical a:active": {
        backgroundColor: string;
    };
    ".btn-group * + *": {
        borderTopWidth: string;
        borderLeftWidth: string;
        borderColor: string;
    };
    ".codeblock pre": {
        counterReset: string;
    };
    ".codeblock code.lineNumbers > span.line": {
        counterIncrement: string;
    };
    ".codeblock code.lineNumbers > span.line::before": {
        content: string;
        opacity: number;
    };
    ".chip": {
        cursor: string;
        whiteSpace: string;
        paddingLeft: string;
        paddingRight: string;
        paddingTop: string;
        paddingBottom: string;
        textAlign: string;
        fontSize: string;
        lineHeight: string;
        borderRadius: string;
        display: string;
        alignItems: string;
        justifyContent: string;
        transitionProperty: string;
        transitionTimingFunction: string;
        transitionDuration: string;
    };
    ".chip > :not([hidden]) ~ :not([hidden])": {
        "--tw-space-x-reverse": string;
        marginRight: string;
        marginLeft: string;
    };
    ".chip:hover": {
        "--tw-brightness": string;
        filter: string;
    };
    ".chip-disabled,\n\t.chip:disabled": {
        cursor: string;
        opacity: string;
    };
    ".chip-disabled:active,\n\t.chip:disabled:active": {
        "--tw-scale-x": string;
        "--tw-scale-y": string;
        transform: string;
    };
    ".list,\n\t.list-dl,\n\t.list-nav ul": {
        listStyleType: string;
    };
    ".list > :not([hidden]) ~ :not([hidden]),\n\t.list-dl > :not([hidden]) ~ :not([hidden]),\n\t.list-nav ul > :not([hidden]) ~ :not([hidden])": {
        "--tw-space-y-reverse": string;
        marginTop: string;
        marginBottom: string;
    };
    ".list li": {
        display: string;
        alignItems: string;
        borderRadius: string;
        whiteSpace: string;
        overflowWrap: string;
    };
    ".list li > :not([hidden]) ~ :not([hidden])": {
        "--tw-space-x-reverse": string;
        marginRight: string;
        marginLeft: string;
    };
    ".list-nav a,\n\t.list-nav button,\n\t.list-option": {
        display: string;
        alignItems: string;
        whiteSpace: string;
        paddingLeft: string;
        paddingRight: string;
        paddingTop: string;
        paddingBottom: string;
        outline: string;
        outlineOffset: string;
        cursor: string;
        borderRadius: string;
    };
    ".list-nav a > :not([hidden]) ~ :not([hidden]),\n\t.list-nav button > :not([hidden]) ~ :not([hidden]),\n\t.list-option > :not([hidden]) ~ :not([hidden])": {
        "--tw-space-x-reverse": string;
        marginRight: string;
        marginLeft: string;
    };
    ".list-nav a:hover,\n\t.list-nav button:hover,\n\t.list-option:hover": {
        backgroundColor: string;
    };
    ".dark .list-nav a:hover,.dark \n\t.list-nav button:hover,.dark \n\t.list-option:hover": {
        backgroundColor: string;
    };
    ".list-nav a:focus,\n\t.list-nav button:focus,\n\t.list-option:focus": {
        backgroundColor: string;
        "--tw-ring-offset-shadow": string;
        "--tw-ring-shadow": string;
        boxShadow: string;
        color: string;
    };
    ".dark .list-nav a:focus,.dark \n\t.list-nav button:focus,.dark \n\t.list-option:focus": {
        color: string;
    };
    ".placeholder": {
        height: string;
        backgroundColor: string;
        borderRadius: string;
    };
    ".dark .placeholder": {
        backgroundColor: string;
    };
    ".table-container": {
        width: string;
        overflowX: string;
        borderRadius: string;
    };
    ".dark .table": {
        backgroundColor: string;
    };
    ".table-interactive tbody tr": {
        cursor: string;
    };
    ".table-interactive tbody tr:hover:hover": {
        backgroundColor: string;
    };
    ".dark .table-interactive tbody tr:hover:hover": {
        backgroundColor: string;
    };
    ".table-interactive tbody tr:hover:nth-child(even):hover": {
        backgroundColor: string;
    };
    ".dark .table-interactive tbody tr:hover:nth-child(even):hover": {
        backgroundColor: string;
    };
    ".table-sort-asc::after": {
        opacity: number;
        "--tw-content": string;
        content: string;
    };
    ".table-sort-dsc::after": {
        opacity: number;
        "--tw-content": string;
        content: string;
    };
    ".table thead": {
        borderBottomWidth: string;
        borderColor: string;
        backgroundColor: string;
    };
    ".dark .table thead": {
        backgroundColor: string;
    };
    ".table thead tr": {
        textAlign: string;
        textTransform: string;
    };
    ".table thead th": {
        padding: string;
        fontWeight: number;
    };
    ".table tbody tr": {
        borderBottomWidth: string;
        borderColor: string;
    };
    ".table tbody tr:nth-child(even)": {
        backgroundColor: string;
    };
    ".table tbody td": {
        whiteSpace: string;
        paddingLeft: string;
        paddingRight: string;
        paddingTop: string;
        paddingBottom: string;
        verticalAlign: string;
        fontSize: string;
        lineHeight: string;
        "@media (min-width: 1024px)": {
            whiteSpace: string;
        }[];
    };
    ".table tfoot": {
        backgroundColor: string;
    };
    ".dark .table tfoot": {
        backgroundColor: string;
    };
    ".table tfoot tr": {
        textAlign: string;
        textTransform: string;
    };
    ".table tfoot th,\n\t.table tfoot td": {
        padding: string;
    };
    ".variant-filled": {
        backgroundColor: string;
        color: string;
    };
    ".dark .variant-filled": {
        backgroundColor: string;
        color: string;
    };
    ".variant-filled-primary": {
        "--tw-bg-opacity": string;
        backgroundColor: string;
        color: string;
    };
    ".variant-filled-secondary": {
        "--tw-bg-opacity": string;
        backgroundColor: string;
        color: string;
    };
    ".variant-filled-surface": {
        backgroundColor: string;
        color: string;
    };
    ".dark .variant-filled-surface": {
        backgroundColor: string;
    };
    ".variant-ghost,\n\t.variant-ghost-surface": {
        "--tw-ring-offset-shadow": string;
        "--tw-ring-shadow": string;
        boxShadow: string;
        "--tw-ring-inset": string;
        "--tw-ring-opacity": string;
        "--tw-ring-color": string;
        backgroundColor: string;
    };
    ".variant-soft,\n\t.variant-soft-surface": {
        backgroundColor: string;
        "--tw-ring-offset-shadow": string;
        "--tw-ring-shadow": string;
        boxShadow: string;
        color: string;
    };
    ".dark .variant-soft,.dark \n\t.variant-soft-surface": {
        color: string;
    };
    ".z-\\[1\\]": {
        zIndex: number;
    };
    ".z-\\[888\\]": {
        zIndex: number;
    };
    ".z-\\[999\\]": {
        zIndex: number;
    };
    ".-mt-\\[15px\\]": {
        marginTop: string;
    };
    ".mt-\\[15px\\]": {
        marginTop: string;
    };
    ".h-\\[50\\%\\]": {
        height: string;
    };
    ".max-h-\\[200px\\]": {
        maxHeight: string;
    };
    ".w-\\[240px\\]": {
        width: string;
    };
    ".w-\\[50\\%\\]": {
        width: string;
    };
    ".w-\\[70\\%\\]": {
        width: string;
    };
    ".w-\\[90\\%\\]": {
        width: string;
    };
    ".min-w-\\[150px\\]": {
        minWidth: string;
    };
    ".max-w-\\[640px\\]": {
        maxWidth: string;
    };
    ".origin-\\[50\\%_50\\%\\]": {
        transformOrigin: string;
    };
    ".translate-x-\\[100\\%\\]": {
        "--tw-translate-x": string;
        transform: string;
    };
    ".scale-\\[0\\.8\\]": {
        "--tw-scale-x": string;
        "--tw-scale-y": string;
        transform: string;
    };
    ".grid-cols-\\[auto_1fr_auto\\]": {
        gridTemplateColumns: string;
    };
    ".grid-rows-\\[auto_1fr_auto\\]": {
        gridTemplateRows: string;
    };
    ".border-primary-500": {
        "--tw-border-opacity": string;
        borderColor: string;
    };
    ".border-secondary-500": {
        "--tw-border-opacity": string;
        borderColor: string;
    };
    ".fill-primary-500": {
        fill: string;
    };
    ".fill-surface-50": {
        fill: string;
    };
    ".fill-surface-900": {
        fill: string;
    };
    ".stroke-surface-300": {
        stroke: string;
    };
    ".stroke-surface-500\\/30": {
        stroke: string;
    };
    ".stroke-surface-900": {
        stroke: string;
    };
    ".\\!px-3": {
        paddingLeft: string;
        paddingRight: string;
    };
    ".\\!py-1": {
        paddingTop: string;
        paddingBottom: string;
    };
    ".\\!py-1\\.5": {
        paddingTop: string;
        paddingBottom: string;
    };
    ".\\!text-sm": {
        fontSize: string;
        lineHeight: string;
    };
    ".\\!text-white": {
        "--tw-text-opacity": string;
        color: string;
    };
    ".text-primary-500": {
        "--tw-text-opacity": string;
        color: string;
    };
    ".text-surface-50": {
        "--tw-text-opacity": string;
        color: string;
    };
    ".accent-surface-900": {
        accentColor: string;
    };
    ".-outline-offset-\\[3px\\]": {
        outlineOffset: string;
    };
    ".\\!ring-0": {
        "--tw-ring-offset-shadow": string;
        "--tw-ring-shadow": string;
        boxShadow: string;
    };
    ".ring-\\[1px\\]": {
        "--tw-ring-offset-shadow": string;
        "--tw-ring-shadow": string;
        boxShadow: string;
    };
    ".ring-surface-500\\/30": {
        "--tw-ring-color": string;
    };
    ".transition-\\[stroke-dashoffset\\]": {
        transitionProperty: string;
        transitionTimingFunction: string;
        transitionDuration: string;
    };
    ".duration-\\[200ms\\]": {
        transitionDuration: string;
    };
    ".hover\\:variant-soft:hover": {
        backgroundColor: string;
        "--tw-ring-offset-shadow": string;
        "--tw-ring-shadow": string;
        boxShadow: string;
        color: string;
    };
    ".dark .hover\\:variant-soft:hover": {
        color: string;
    };
    ".hover\\:brightness-\\[105\\%\\]:hover": {
        "--tw-brightness": string;
        filter: string;
    };
    ".disabled\\:\\!opacity-0:disabled": {
        opacity: string;
    };
    ".w-modal-slim": {
        width: string;
        maxWidth: string;
    };
    ".w-modal": {
        width: string;
        maxWidth: string;
    };
    ".w-modal-wide": {
        width: string;
        maxWidth: string;
    };
};
export = _exports;
